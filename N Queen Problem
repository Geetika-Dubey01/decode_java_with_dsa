public class NQueens {
    static int N = 4; 

    public static void main(String[] args) {
        char[][] board = new char[N][N];
        for (int i = 0; i < N; i++)
            for (int j = 0; j < N; j++)
                board[i][j] = '.';
        solve(board, 0);
    }
    public static boolean solve(char[][] board, int row) {
        if (row == N) {
            printBoard(board);
            return true;
        }
        for (int col = 0; col < N; col++) {
            if (isSafe(board, row, col)) {
                board[row][col] = 'Q'; 
                if (solve(board, row + 1)) 
                    return true; 
                board[row][col] = '.'; 
            }
        }

        return false; 
    }
    public static boolean isSafe(char[][] board, int row, int col) {
        for (int i = 0; i < row; i++)
            if (board[i][col] == 'Q') return false;
        for (int i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--)
            if (board[i][j] == 'Q') return false;

        // Check upper-right diagonal
        for (int i = row - 1, j = col + 1; i >= 0 && j < N; i--, j++)
            if (board[i][j] == 'Q') return false;
        return true; 
    }
    public static void printBoard(char[][] board) {
        System.out.println("Solution:");
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++)
                System.out.print(board[i][j] + " ");
            System.out.println();
        }
        System.out.println();
    }
}
